[tool.poetry]
name = "racs-tools"
version = "0.0.0" # A placeholder
description = "Useful scripts for RACS."
authors = ["Alec Thomson"]
license = "BSD"
readme = "README.md"
packages = [{include = "racs_tools"}]

[tool.poetry.dependencies]
python = ">=3.10"
numpy = ">=2"
astropy = ">=6"
radio_beam = ">=0.3.8"
scipy = "*"
spectral_cube = ">=0.6.3"
tqdm = "*"
numba = "*"
mpi4py = {version = ">=3", optional = true}

[tool.poetry.dev-dependencies]
ruff = {version = "*", optional = true}

[tool.poetry.extras]
mpi = ["mpi4py"]

[tool.poetry.scripts]
beamcon_2D = "racs_tools.beamcon_2D:cli"
beamcon_3D = "racs_tools.beamcon_3D:cli"
getnoise_list = "racs_tools.getnoise_list:cli"


[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.ruff]
src = ["racs_tools"]

[tool.ruff.lint]
extend-select = [
    # "B",   # flake8-bugbear
    "I",   # isort
    "ARG", # flake8-unused-arguments
    # "C4",  # flake8-comprehensions
    # "EM",  # flake8-errmsg
    "ICN", # flake8-import-conventions
    # "G",   # flake8-logging-format
    # "PGH", # pygrep-hooks
    # "PIE", # flake8-pie
    # "PL",  # pylint
    # "PT",  # flake8-pytest-style
    # "PTH", # flake8-use-pathlib
    # "RET", # flake8-return
    # "RUF", # Ruff-specific
    # "SIM", # flake8-simplify
    # "T20", # flake8-print
    "UP",  # pyupgrade
    # "YTT", # flake8-2020
    # "EXE", # flake8-executable
    # "NPY", # NumPy specific rules
    # "PD",  # pandas-vet,
    # "RET", # flake8-return
]
